<?xml version="1.0" encoding="UTF-8"?>
<!-- spring檔案內的標籤宣告 -->  
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
           
       <!-- spring所提供的關聯注入di可分2種:
       		1.XML-based:使用XML檔案設定類別間的關聯性
       		2.JAVA-based:使用JAVA類別搭配annotation設定類別間的關聯性。
       		無論何種都必須建立一個實作ApplicationContext介面的Spring框架物件
        -->  
           
       <!-- spring自動建立GunDI物件 -->    
       <bean id="weapon" class="course.spring.di.GunDI"/>
       <!-- 因建構子要實作WeaponDI介面的物件 -->
       <bean id="mySoldier" class="course.spring.di.MySoldierDI">
       <!-- spring將其控管的bean元件中找合適的自動關聯注入，即id為weapon的bean元件 -->
       <!-- 把GunDI注入到MySoldierDI建構子裡-->
       		<constructor-arg ref="weapon"/>
       </bean>
     
     
       <!-- aop 上面設定要先載入url --> 
       <!-- aop應用領域:交易控制(transaction)、安全檢核(security)，因複雜度延伸成為spring兩大模組，皆為獨立的應用 -->      
       <bean id="alertAspectBean" class="course.spring.aop.AlertXML"/>
       <!-- aop設定--> 
       <aop:config>
       <!--定義pointcut(切入點)是在Soldier.destroyTarget(..)被執行時--> 
       		<aop:pointcut id="alertPointcut" 
       			expression="execution(* course.spring.Soldier.destroyTarget(..))"/>
       		<!--將使用告警的bean元件，建立aspect物件可用xml設定，跟用annotation設定-->	
       		<aop:aspect id="alertAspect" ref="alertAspectBean">
       			<aop:before pointcut-ref="alertPointcut" method="beforeAttack"/>
       			<aop:after pointcut-ref="alertPointcut" method="afterAttack"/>
       		</aop:aspect>
       </aop:config>
       
       <!--設定物件關聯--> 
       <bean id="dataSource"
       		 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       		 <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
       		 <property name="url" value="jdbc:derby://localhost:1527/myDB"/>
       		 <property name="username" value="root"/>
       		 <property name="password" value="sa"/>
       </bean>
       <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
       		 <property name="dataSource" ref="dataSource"/>
       </bean>
       <bean id="employeeDao" class="course.spring.template.EmployeeDao">
       		 <constructor-arg ref="jdbcTemplate"/>
       </bean>
       
       
       <!--生命週期--> 
       <bean id="simpleBean" class="course.spring.lifeCycle.SimpleBean"
       		 init-method="myInit"
       		 destroy-method="myDestroy">
       		 <property name="message" value="Hello World"/>      		
       </bean>    

</beans>